{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\unart\\\\Documents\\\\GitHub\\\\react-todo-app-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './Components/TodoForm';\nimport TodoList from './Components/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputText, setInputText] = useState('');\n  // const [taskList, setTaskList] = useState([]);\n  const [taskList, setTaskList] = useState(() => {\n    return JSON.parse(localStorage.getItem(\"tasks\")) || [];\n  });\n  const [status, setStatus] = useState(['all']);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTasks(taskList.filter(task => task.completed === true));\n        break;\n      case 'uncompleted':\n        setFilteredTasks(taskList.filter(task => task.completed !== true));\n        break;\n      default:\n        setFilteredTasks(taskList);\n        break;\n    }\n  };\n  //ONLY RUNS ONCE FOR LOCAL STORAGE!\n  // useEffect(() => {\n  //   getLocalTasks()\n  // }, []);\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTasks();\n  }, [inputText, taskList, status]);\n\n  // useEffect(()=> {saveLocalTasks()},[inputText])\n\n  // const getLocalTasks = () => {\n  //   if (localStorage.getItem('tasks') === null) {\n  //     console.log('empty')\n  //     localStorage.setItem('tasks', JSON.stringify([]));\n  //   }\n  //   else {\n  //     let tasksFromLocal = JSON.parse(localStorage.getItem(\"tasks\"))\n  //     console.log(tasksFromLocal)\n  //     setTaskList(tasksFromLocal)\n  //   }\n  // };\n\n  const saveLocalTasks = () => {\n    localStorage.setItem('tasks', JSON.stringify(taskList));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      inputText: inputText,\n      setInputText: setInputText,\n      setTaskList: setTaskList,\n      taskList: taskList,\n      status: status,\n      setStatus: setStatus,\n      setFilteredTasks: setFilteredTasks,\n      filteredTasks: filteredTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      filteredTasks: filteredTasks,\n      taskList: taskList,\n      setTaskList: setTaskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/aLnD+9f2prJmgGryaNwcaYK43s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TodoForm","TodoList","jsxDEV","_jsxDEV","App","_s","inputText","setInputText","taskList","setTaskList","JSON","parse","localStorage","getItem","status","setStatus","filteredTasks","setFilteredTasks","filterHandler","filter","task","completed","saveLocalTasks","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/unart/Documents/GitHub/react-todo-app-project/src/App.js"],"sourcesContent":["import './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport TodoForm from './Components/TodoForm';\r\nimport TodoList from './Components/TodoList';\r\n\r\nfunction App() {\r\n  const [inputText, setInputText] = useState('');\r\n  // const [taskList, setTaskList] = useState([]);\r\n  const [taskList, setTaskList] = useState(() => {\r\n    return JSON.parse(localStorage.getItem(\"tasks\")) || []\r\n  });\r\n  const [status, setStatus] = useState(['all']);\r\n  const [filteredTasks, setFilteredTasks] = useState([]);\r\n  const filterHandler = () => {\r\n    switch (status) {\r\n      case 'completed':\r\n        setFilteredTasks(taskList.filter(task => task.completed === true))\r\n        break;\r\n      case 'uncompleted':\r\n        setFilteredTasks(taskList.filter(task => task.completed !== true))\r\n        break;\r\n      default:\r\n        setFilteredTasks(taskList)\r\n        break;\r\n    }\r\n  }\r\n  //ONLY RUNS ONCE FOR LOCAL STORAGE!\r\n  // useEffect(() => {\r\n  //   getLocalTasks()\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    filterHandler()\r\n    saveLocalTasks()\r\n  }, [inputText, taskList, status])\r\n\r\n  // useEffect(()=> {saveLocalTasks()},[inputText])\r\n\r\n  // const getLocalTasks = () => {\r\n  //   if (localStorage.getItem('tasks') === null) {\r\n  //     console.log('empty')\r\n  //     localStorage.setItem('tasks', JSON.stringify([]));\r\n  //   }\r\n  //   else {\r\n  //     let tasksFromLocal = JSON.parse(localStorage.getItem(\"tasks\"))\r\n  //     console.log(tasksFromLocal)\r\n  //     setTaskList(tasksFromLocal)\r\n  //   }\r\n  // };\r\n\r\n  const saveLocalTasks = () => {\r\n    localStorage.setItem('tasks', JSON.stringify(taskList))\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        Todo List\r\n      </header>\r\n      <TodoForm\r\n        inputText={inputText}\r\n        setInputText={setInputText}\r\n        setTaskList={setTaskList}\r\n        taskList={taskList}\r\n        status={status}\r\n        setStatus={setStatus}\r\n        setFilteredTasks={setFilteredTasks}\r\n        filteredTasks={filteredTasks} />\r\n      <TodoList\r\n        filteredTasks={filteredTasks}\r\n        taskList={taskList}\r\n        setTaskList={setTaskList}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C;EACA,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,MAAM;IAC7C,OAAOY,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;EACxD,CAAC,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;EAC7C,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMoB,aAAa,GAAGA,CAAA,KAAM;IAC1B,QAAQJ,MAAM;MACZ,KAAK,WAAW;QACdG,gBAAgB,CAACT,QAAQ,CAACW,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,KAAK,IAAI,CAAC,CAAC;QAClE;MACF,KAAK,aAAa;QAChBJ,gBAAgB,CAACT,QAAQ,CAACW,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,KAAK,IAAI,CAAC,CAAC;QAClE;MACF;QACEJ,gBAAgB,CAACT,QAAQ,CAAC;QAC1B;IAAM;EAEZ,CAAC;EACD;EACA;EACA;EACA;;EAEAT,SAAS,CAAC,MAAM;IACdmB,aAAa,EAAE;IACfI,cAAc,EAAE;EAClB,CAAC,EAAE,CAAChB,SAAS,EAAEE,QAAQ,EAAEM,MAAM,CAAC,CAAC;;EAEjC;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMQ,cAAc,GAAGA,CAAA,KAAM;IAC3BV,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEb,IAAI,CAACc,SAAS,CAAChB,QAAQ,CAAC,CAAC;EACzD,CAAC;EAED,oBACEL,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBvB,OAAA;MAAAuB,QAAA,EAAQ;IAER;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACT3B,OAAA,CAACH,QAAQ;MACPM,SAAS,EAAEA,SAAU;MACrBC,YAAY,EAAEA,YAAa;MAC3BE,WAAW,EAAEA,WAAY;MACzBD,QAAQ,EAAEA,QAAS;MACnBM,MAAM,EAAEA,MAAO;MACfC,SAAS,EAAEA,SAAU;MACrBE,gBAAgB,EAAEA,gBAAiB;MACnCD,aAAa,EAAEA;IAAc;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAClC3B,OAAA,CAACF,QAAQ;MACPe,aAAa,EAAEA,aAAc;MAC7BR,QAAQ,EAAEA,QAAS;MACnBC,WAAW,EAAEA;IAAY;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAACzB,EAAA,CAtEQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAwEZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}