{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\unart\\\\Desktop\\\\projects\\\\react-todo-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './Components/TodoForm';\nimport TodoList from './Components/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [taskList, setTaskList] = useState([]);\n  const [status, setStatus] = useState(['all']);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTasks(taskList.filter(task => task.completed === true));\n        break;\n      case 'uncompleted':\n        setFilteredTasks(taskList.filter(task => task.completed !== true));\n        break;\n      default:\n        setFilteredTasks(taskList);\n        break;\n    }\n  };\n  //ONLY RUNS ONCE FOR LOCAL STORAGE!\n  useEffect(() => {\n    getLocalTasks();\n  }, []);\n  useEffect(() => {\n    filterHandler();\n    saveLocalTasks();\n  }, [inputText, taskList, status]);\n  const saveLocalTasks = () => {\n    if (localStorage.getItem('tasks') !== null) {\n      // localStorage.setItem('tasks', JSON.stringify(taskList)) \n      localStorage.getItem('tasks', JSON.stringify(taskList));\n      console.log('a');\n    } else {\n      console.log('b');\n    }\n  };\n  const getLocalTasks = () => {\n    if (localStorage.getItem('tasks') === null) {\n      console.log('empty');\n      localStorage.setItem('tasks', JSON.stringify([]));\n    } else {\n      let tasksFromLocal = JSON.parse(localStorage.getItem('tasks'));\n      setTaskList(tasksFromLocal);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      setInputText: setInputText,\n      setTaskList: setTaskList,\n      inputText: inputText,\n      taskList: taskList,\n      status: status,\n      setStatus: setStatus,\n      setFilteredTasks: setFilteredTasks,\n      filteredTasks: filteredTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      filteredTasks: filteredTasks,\n      taskList: taskList,\n      setTaskList: setTaskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Suw++2TUwT56fPi1oqPw9KHIws8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TodoForm","TodoList","jsxDEV","_jsxDEV","App","_s","inputText","setInputText","taskList","setTaskList","status","setStatus","filteredTasks","setFilteredTasks","filterHandler","filter","task","completed","getLocalTasks","saveLocalTasks","localStorage","getItem","JSON","stringify","console","log","setItem","tasksFromLocal","parse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/unart/Desktop/projects/react-todo-app/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './Components/TodoForm';\nimport TodoList from './Components/TodoList';\n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [taskList, setTaskList] = useState([])\n  const [status, setStatus] = useState(['all'])\n  const [filteredTasks, setFilteredTasks] = useState([])\n\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTasks(taskList.filter(task => task.completed === true))\n        break;\n      case 'uncompleted':\n        setFilteredTasks(taskList.filter(task => task.completed !== true))\n        break;\n      default:\n        setFilteredTasks(taskList)\n        break;\n    }\n  }\n  //ONLY RUNS ONCE FOR LOCAL STORAGE!\n  useEffect(() => {\n    getLocalTasks()\n  }, []);\n\n  useEffect(() => {\n    filterHandler()\n    saveLocalTasks()\n  }, [inputText, taskList, status])\n  \n\n  const saveLocalTasks = () => {\n    if (localStorage.getItem('tasks') !== null) { \n      // localStorage.setItem('tasks', JSON.stringify(taskList)) \n      localStorage.getItem('tasks', JSON.stringify(taskList))\n      console.log('a')\n    } else {console.log('b')}\n    \n  }\n  const getLocalTasks = () => {\n    if (localStorage.getItem('tasks') === null) {\n      console.log('empty')\n      localStorage.setItem('tasks', JSON.stringify([]));\n    }\n    else {\n      let tasksFromLocal = JSON.parse(localStorage.getItem('tasks'));\n      setTaskList(tasksFromLocal)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        Todo List\n      </header>\n      <TodoForm\n        setInputText={setInputText}\n        setTaskList={setTaskList}\n        inputText={inputText}\n        taskList={taskList}\n        status={status}\n        setStatus={setStatus}\n        setFilteredTasks={setFilteredTasks}\n        filteredTasks={filteredTasks} />\n      <TodoList\n        filteredTasks={filteredTasks}\n        taskList={taskList}\n        setTaskList={setTaskList}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}