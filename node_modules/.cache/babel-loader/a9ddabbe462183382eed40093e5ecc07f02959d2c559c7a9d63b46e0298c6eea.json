{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\unart\\\\Desktop\\\\projects\\\\react-todo-app\\\\src\\\\Components\\\\TodoList.js\";\nimport React, { useState } from 'react';\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = _ref => {\n  let {\n    taskList\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: [/*#__PURE__*/_jsxDEV(Todo, {\n        taskName: taskList.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 13\n      }, this), taskList.forEach(task => {\n        /*#__PURE__*/_jsxDEV(Todo, {\n          taskName: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","Todo","jsxDEV","_jsxDEV","TodoList","_ref","taskList","className","children","taskName","text","fileName","_jsxFileName","lineNumber","columnNumber","forEach","task","_c","$RefreshReg$"],"sources":["C:/Users/unart/Desktop/projects/react-todo-app/src/Components/TodoList.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport Todo from './Todo';\r\nconst TodoList = ({taskList}) => {\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n            <Todo taskName={taskList.text}/>\r\n                {taskList.forEach(task=> {\r\n                    <Todo taskName={task.text}/>\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,MAAMC,QAAQ,GAAGC,IAAA,IAAgB;EAAA,IAAf;IAACC;EAAQ,CAAC,GAAAD,IAAA;EACxB,oBACIF,OAAA;IAAKI,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC3BL,OAAA;MAAII,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACzBL,OAAA,CAACF,IAAI;QAACQ,QAAQ,EAAEH,QAAQ,CAACI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,EAC3BR,QAAQ,CAACS,OAAO,CAACC,IAAI,IAAG;QACrB,aAAAb,OAAA,CAACF,IAAI;UAACQ,QAAQ,EAAEO,IAAI,CAACN;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE;MAChC,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEd,CAAC;AAAAG,EAAA,GAXKb,QAAQ;AAad,eAAeA,QAAQ;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}