[{"C:\\Users\\unart\\Desktop\\projects\\react-todo-app\\src\\index.js":"1","C:\\Users\\unart\\Desktop\\projects\\react-todo-app\\src\\App.js":"2","C:\\Users\\unart\\Desktop\\projects\\react-todo-app\\src\\Components\\TodoForm.js":"3","C:\\Users\\unart\\Desktop\\projects\\react-todo-app\\src\\Components\\TodoList.js":"4","C:\\Users\\unart\\Desktop\\projects\\react-todo-app\\src\\Components\\Todo.js":"5","C:\\Users\\unart\\Documents\\GitHub\\react-todo-app-project\\src\\index.js":"6","C:\\Users\\unart\\Documents\\GitHub\\react-todo-app-project\\src\\App.js":"7","C:\\Users\\unart\\Documents\\GitHub\\react-todo-app-project\\src\\Components\\TodoList.js":"8","C:\\Users\\unart\\Documents\\GitHub\\react-todo-app-project\\src\\Components\\TodoForm.js":"9","C:\\Users\\unart\\Documents\\GitHub\\react-todo-app-project\\src\\Components\\Todo.js":"10"},{"size":233,"mtime":1678887836632,"results":"11","hashOfConfig":"12"},{"size":2111,"mtime":1678979855527,"results":"13","hashOfConfig":"12"},{"size":1409,"mtime":1678979780613,"results":"14","hashOfConfig":"12"},{"size":495,"mtime":1678976414227,"results":"15","hashOfConfig":"12"},{"size":988,"mtime":1678976117833,"results":"16","hashOfConfig":"12"},{"size":233,"mtime":1678887836632,"results":"17","hashOfConfig":"18"},{"size":2111,"mtime":1678979855527,"results":"19","hashOfConfig":"18"},{"size":495,"mtime":1678976414227,"results":"20","hashOfConfig":"18"},{"size":1422,"mtime":1679222143271,"results":"21","hashOfConfig":"18"},{"size":1875,"mtime":1679222221659,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"qjc838",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"44aa6y",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\unart\\Desktop\\projects\\react-todo-app\\src\\index.js",[],[],[],"C:\\Users\\unart\\Desktop\\projects\\react-todo-app\\src\\App.js",["57"],[],"C:\\Users\\unart\\Desktop\\projects\\react-todo-app\\src\\Components\\TodoForm.js",["58","59","60","61"],[],"C:\\Users\\unart\\Desktop\\projects\\react-todo-app\\src\\Components\\TodoList.js",["62"],[],"C:\\Users\\unart\\Desktop\\projects\\react-todo-app\\src\\Components\\Todo.js",[],[],"C:\\Users\\unart\\Documents\\GitHub\\react-todo-app-project\\src\\index.js",[],[],"C:\\Users\\unart\\Documents\\GitHub\\react-todo-app-project\\src\\App.js",["63"],[],"import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './Components/TodoForm';\nimport TodoList from './Components/TodoList';\n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  // const [taskList, setTaskList] = useState([]);\n  const [taskList, setTaskList] = useState(() => {\n    return JSON.parse(localStorage.getItem(\"tasks\")) || []\n  });\n  const [status, setStatus] = useState(['all']);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTasks(taskList.filter(task => task.completed === true))\n        break;\n      case 'uncompleted':\n        setFilteredTasks(taskList.filter(task => task.completed !== true))\n        break;\n      default:\n        setFilteredTasks(taskList)\n        break;\n    }\n  }\n  //ONLY RUNS ONCE FOR LOCAL STORAGE!\n  // useEffect(() => {\n  //   getLocalTasks()\n  // }, []);\n\n  useEffect(() => {\n    filterHandler()\n    saveLocalTasks()\n  }, [inputText, taskList, status])\n\n  // useEffect(()=> {saveLocalTasks()},[inputText])\n\n  // const getLocalTasks = () => {\n  //   if (localStorage.getItem('tasks') === null) {\n  //     console.log('empty')\n  //     localStorage.setItem('tasks', JSON.stringify([]));\n  //   }\n  //   else {\n  //     let tasksFromLocal = JSON.parse(localStorage.getItem(\"tasks\"))\n  //     console.log(tasksFromLocal)\n  //     setTaskList(tasksFromLocal)\n  //   }\n  // };\n\n  const saveLocalTasks = () => {\n    localStorage.setItem('tasks', JSON.stringify(taskList))\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        Todo List\n      </header>\n      <TodoForm\n        inputText={inputText}\n        setInputText={setInputText}\n        setTaskList={setTaskList}\n        taskList={taskList}\n        status={status}\n        setStatus={setStatus}\n        setFilteredTasks={setFilteredTasks}\n        filteredTasks={filteredTasks} />\n      <TodoList\n        filteredTasks={filteredTasks}\n        taskList={taskList}\n        setTaskList={setTaskList}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\unart\\Documents\\GitHub\\react-todo-app-project\\src\\Components\\TodoList.js",["64"],[],"import React, {useState} from 'react';\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = ({taskList, setTaskList, filteredTasks}) => {\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {filteredTasks.map((item, index)=>(\r\n                    <Todo taskNumber={index} task={item} key={item.id} setTaskList={setTaskList} taskList={taskList} />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList","C:\\Users\\unart\\Documents\\GitHub\\react-todo-app-project\\src\\Components\\TodoForm.js",["65","66","67","68"],[],"import React, { useState } from 'react'\r\nimport uniqid from 'uniqid';\r\n\r\nfunction TodoForm(props) {\r\n    const { inputText, setInputText, setTaskList, taskList, setStatus, setFilteredTasks, status, filteredTasks } = props;\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value)\r\n    }\r\n    const submitTaskHandler = (e) => {\r\n        e.preventDefault()\r\n        setTaskList([\r\n            ...taskList, { text: inputText, completed: false, id: uniqid(), edit: false }\r\n        ])\r\n        setInputText('')\r\n    }\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n    return (\r\n        <div>\r\n            <form>\r\n                <input type='text' className='todo-input' onChange={inputTextHandler} value={inputText}></input>\r\n                <button className='todo-button' type='submit' onClick={submitTaskHandler}>\r\n                    <i className=\"fas fa-plus-square\"></i>\r\n                </button>\r\n                <div className='select'>\r\n                    <select name='todos' className='filter-todo' onChange={statusHandler}>\r\n                        <option value='all'>All</option>\r\n                        <option value='completed'>Completed</option>\r\n                        <option value='uncompleted'>Uncompleted</option>\r\n                    </select>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default TodoForm","C:\\Users\\unart\\Documents\\GitHub\\react-todo-app-project\\src\\Components\\Todo.js",[],[],{"ruleId":"69","severity":1,"message":"70","line":35,"column":6,"nodeType":"71","endLine":35,"endColumn":35,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"73","severity":1,"message":"77","line":5,"column":72,"nodeType":"75","messageId":"76","endLine":5,"endColumn":88},{"ruleId":"73","severity":1,"message":"78","line":5,"column":90,"nodeType":"75","messageId":"76","endLine":5,"endColumn":96},{"ruleId":"73","severity":1,"message":"79","line":5,"column":98,"nodeType":"75","messageId":"76","endLine":5,"endColumn":111},{"ruleId":"73","severity":1,"message":"74","line":1,"column":16,"nodeType":"75","messageId":"76","endLine":1,"endColumn":24},{"ruleId":"69","severity":1,"message":"70","line":35,"column":6,"nodeType":"71","endLine":35,"endColumn":35,"suggestions":"80"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":16,"nodeType":"75","messageId":"76","endLine":1,"endColumn":24},{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"73","severity":1,"message":"77","line":5,"column":72,"nodeType":"75","messageId":"76","endLine":5,"endColumn":88},{"ruleId":"73","severity":1,"message":"78","line":5,"column":90,"nodeType":"75","messageId":"76","endLine":5,"endColumn":96},{"ruleId":"73","severity":1,"message":"79","line":5,"column":98,"nodeType":"75","messageId":"76","endLine":5,"endColumn":111},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterHandler' and 'saveLocalTasks'. Either include them or remove the dependency array.","ArrayExpression",["81"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'setFilteredTasks' is assigned a value but never used.","'status' is assigned a value but never used.","'filteredTasks' is assigned a value but never used.",["82"],{"desc":"83","fix":"84"},{"desc":"83","fix":"85"},"Update the dependencies array to be: [inputText, taskList, status, filterHandler, saveLocalTasks]",{"range":"86","text":"87"},{"range":"88","text":"87"},[1029,1058],"[inputText, taskList, status, filterHandler, saveLocalTasks]",[1029,1058]]